// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum InsightType {
  HEALTH_REPORT
  DAILY_TIP
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String
  password  String
  points    Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  plants          Plant[]
  UserAchievement UserAchievement[]
}

model Plant {
  id             String   @id @default(uuid())
  name           String
  species        String
  deviceId       String   @unique
  apiKey         String   @unique
  pendingCommand Json?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  user       User         @relation(fields: [userId], references: [id])
  userId     String
  SensorData SensorData[]
  AiInsight  AiInsight[]
}

model SensorData {
  id String @id @default(uuid())

  humidity    Float?
  temperature Float?
  luminosity  Float?

  wifiSignal   Int?
  waterLevel   Float? // Nível do reservatório de água em cm
  rainDetected Boolean? // true se chuva for detectada
  pumpStatus   Boolean? // true se a bomba estiver ligada
  coverStatus  Boolean? // true se a lona estiver aberta
  soilStatus   Int? // 0: seco, 1: úmido, 2: encharcado

  createdAt DateTime @default(now())
  plant     Plant    @relation(fields: [plantId], references: [id])
  plantId   String
}

model Achievement {
  id          String @id @default(uuid())
  code        String @unique
  name        String
  description String
  icon        String

  users UserAchievement[]
}

model UserAchievement {
  id         String   @id @default(uuid())
  unlockedAt DateTime @default(now())

  user   User   @relation(fields: [userId], references: [id])
  userId String

  achievement   Achievement @relation(fields: [achievementId], references: [id])
  achievementId String

  @@unique([userId, achievementId])
}

model AiInsight {
  id        String      @id @default(uuid())
  type      InsightType // Tipo de insight (Relatório, Dica, etc.)
  content   String      @db.Text // Usamos @db.Text para textos potencialmente longos
  createdAt DateTime    @default(now())

  plant   Plant  @relation(fields: [plantId], references: [id])
  plantId String
}
