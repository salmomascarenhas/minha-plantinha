# ==============================================
# BASE STAGE - Common to Dev and Prod
# ==============================================
FROM node:20-alpine AS base
WORKDIR /app
# Copia os arquivos de dependência primeiro para aproveitar o cache do Docker
COPY package.json package-lock.json* ./
# Instala TODAS as dependências (dev e prod)
RUN npm install

# ==============================================
# DEVELOPMENT STAGE
# ==============================================
FROM base AS development
ENV NODE_ENV=development
# Copia o restante do código fonte
COPY . .
# Garante que o entrypoint é executável
COPY --chmod=755 entrypoint.sh ./
EXPOSE 3000
ENTRYPOINT ["./entrypoint.sh"]
CMD ["npm", "run", "dev"]

# ==============================================
# PRODUCTION BUILD STAGE
# ==============================================
FROM base AS build
ENV NODE_ENV=production
COPY . .
# Gera o cliente Prisma e constrói a aplicação
RUN npx prisma generate
RUN npm run build

# ==============================================
# PRODUCTION FINAL STAGE
# ==============================================
FROM node:20-alpine AS production
WORKDIR /app
ENV NODE_ENV=production

# Instala apenas dependências de produção para uma imagem menor
COPY package.json package-lock.json* ./
RUN npm ci --only=production

# Copia os artefatos da build e o prisma schema
COPY --from=build /app/dist ./dist
COPY --from=build /app/prisma ./prisma
# Copia o entrypoint e o torna executável
COPY --chmod=755 entrypoint.sh ./

# Cria um usuário não-root para segurança
RUN addgroup -S nodejs && adduser -S backend -G nodejs

# --- INÍCIO DA MUDANÇA ---
# Concede a propriedade da pasta da aplicação para o novo usuário
RUN chown -R backend:nodejs /app
# --- FIM DA MUDANÇA ---

# Agora muda para o usuário não-root
USER backend

EXPOSE 3000
ENTRYPOINT ["./entrypoint.sh"]
CMD ["node", "dist/app.js"]