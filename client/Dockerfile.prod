# ==============================================
# PRODUCTION DOCKERFILE - FRONTEND
# ==============================================

# ---------- Build stage ----------
FROM node:20-alpine AS build
WORKDIR /app

# Install dependencies
COPY package.json package-lock.json* ./
RUN npm ci && npm cache clean --force

# Copy source code
COPY . .

# Copy production environment variables for build-time
COPY .env.production .env.production

# Build the application
RUN npm run build

# ---------- Production stage ----------
FROM nginx:alpine AS production

# Copy built application
COPY --from=build /app/dist /usr/share/nginx/html

# Copy nginx configuration
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost/ || exit 1

EXPOSE 80

# Start nginx directly
CMD ["nginx", "-g", "daemon off;"]
